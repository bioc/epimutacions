obj<-rrcovHD::OutlierMahdist(x= beta.values[,1:11])
obj<-rrcovHD::OutlierMahdist(x= beta.values[,10:11])
obj<-rrcovHD::OutlierMahdist(x= beta.values[,2:11])
obj<-rrcovHD::OutlierMahdist(x= beta.values[,3:11])
obj<-rrcovHD::OutlierMahdist(x= beta.values[,4:11])
obj<-rrcovHD::OutlierMahdist(x= beta.values[,5:11])
obj<-rrcovHD::OutlierMahdist(x= beta.values[,6:11])
obj<-rrcovHD::OutlierMahdist(x= beta.values[,7:11])
obj<-rrcovHD::OutlierMahdist(x= beta.values[,8:11])
obj<-rrcovHD::OutlierMahdist(x= beta.values[,9:11])
obj<-rrcovHD::OutlierMahdist(x= beta.values[,10:11])
obj<-rrcovHD::OutlierMahdist(x= beta.values[,1:11])
obj<-rrcovHD::OutlierMahdist(x= beta.values[,1:11])
obj<-rrcovHD::OutlierMahdist(x= beta.values)
obj<-rrcovHD::OutlierMahdist(x= beta.values)
E
obj<-rrcovHD::OutlierMahdist(x= beta.values)
for( i in 1:dim(bumps)[1])
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x= beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 31)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x= beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 32)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x= beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 1:50)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x= beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 1:32)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x= beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 1:31)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x= beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 1:30)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x = beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 30)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x = beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 31:10)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x = beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 1:10)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x = beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 1)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x = beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 1:5)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x = beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 1:4)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x = beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 1:5)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x = beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 1:3)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x = beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 1:2)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x = beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 1:4)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x = beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 4)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x = beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
beta.values<-BumpBetaMatrix(bumps[4,],set)
obj<-rrcovHD::OutlierMahdist(x = beta.values)
obj<-rrcovHD::OutlierMahdist(x = beta.values[,1:2])
dim(beta.values)
obj<-rrcovHD::OutlierMahdist(x = beta.values[,1:10])
obj<-rrcovHD::OutlierMahdist(x = beta.values[,1:11])
obj<-rrcovHD::OutlierMahdist(x = beta.values[,1:12])
obj<-rrcovHD::OutlierMahdist(x = beta.values[,1:13])
obj<-rrcovHD::OutlierMahdist(x = beta.values[,1:14])
obj<-rrcovHD::OutlierMahdist(x = beta.values[,1:15])
obj<-rrcovHD::OutlierMahdist(x = beta.values[,11:13])
obj<-rrcovHD::OutlierMahdist(x = beta.values[,1:11])
obj<-rrcovHD::OutlierMahdist(x = beta.values[,1:13])
obj<-rrcovHD::OutlierMahdist(x = beta.values[,1:24])
obj<-rrcovHD::OutlierMahdist(x = beta.values[,1:13])
obj<-rrcovHD::OutlierMahdist(x = beta.values)
sed.seet(100)
set.seed(100)
for( i in 1:dim(bumps)[1])
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x= beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 1:10)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x= beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 1:3)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x= beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
for( i in 3)
{
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
obj<-rrcovHD::OutlierMahdist(x= beta.values)
#outliers<-which(rrcovHD::getFlag(reult) == 0)
}
beta.values<-BumpBetaMatrix(bumps[3,],set)
obj<-rrcovHD::OutlierMahdist(x= beta.values)
obj<-rrcovHD::OutlierMahdist(x= beta.values[,1:20])
dim(beta.values)
obj<-rrcovHD::OutlierMahdist(x= beta.values[,1:10])
?rrcovHD::OutlierMahdist(x= beta.values[,1:10])
set.seed(100)
?rrcovHD::OutlierMahdist(x= beta.values)
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values)
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,1:10])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,1:12])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,1:15])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,1:14])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,c(1,15)])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,c(2,15)])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,c(3,15)])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,c(4,15)])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,c(5,15)])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,c(6,15)])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,c(7,15)])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,c(8,15)])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,c(9,15)])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,c(10,15)])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,c(11,15)])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,c(12,15)])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,c(13,15)])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,c(14,15)])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values)
beta.values[,15]
caret::findLinearCombos(beta.values)
install.packages("caret")
caret::findLinearCombos(beta.values)
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,1:15])
set.seed(100); rrcovHD::OutlierMahdist(x= beta.values[,2:15])
beta.values[,c(1,15)]
summary(beta.values[,c(1,15)])
summary(beta.values)
round.beta<-round(beta.values,digits=3)
obj<-rrcovHD::OutlierMahdist(x= round.beta)
set.seed(100); rrcovHD::OutlierMahdist(x= round.neta)
set.seed(100); rrcovHD::OutlierMahdist(x= round.beta)
set.seed(100); rrcovHD::OutlierMahdist(x= round.beta[,2:15])
set.seed(100); rrcovHD::OutlierMahdist(x= round.beta[,1:14])
rrcovHD::OutlierMahdist(x= beta.values)
rrcovHD::OutlierMahdist(x= beta.values)
rrcovHD::OutlierMahdist(x= beta.values)
rrcovHD::OutlierMahdist(x= beta.values)
rrcovHD::OutlierMahdist(x= beta.values)
rrcovHD::OutlierMahdist(x= beta.values)
rrcovHD::OutlierMahdist(x= beta.values)
rrcovHD::OutlierMahdist(x= beta.values)
rrcovHD::OutlierMahdist(x= beta.values)
rrcovHD::OutlierMahdist(x= beta.values)
rrcovHD::OutlierMahdist(x= beta.values)
rrcovHD::OutlierMahdist(x= beta.values)
rrcovHD::OutlierMahdist(x= beta.values)
rrcovHD::OutlierMahdist(x= beta.values)
summary(beta.values)
summary(beta.values[,c(1:15)])
summary(beta.values[,c(1,15)])
for( i in 1:dim(bumps)[1])
{
mcd<-robustbase::covMcd(beta.values)
#Get mcd stimate of location
mean_mcd <- mcd$center
# get mcd estimate scatter
cov_mcd <- mcd$cov
# get inverse of scatter
cov_mcd_inv <- solve(cov_mcd)
# compute the robust distance
robust_dist <- apply(beta.values, 1, function(x){
x <- (x - mean_mcd)
dist <- sqrt((t(x)  %*% cov_mcd_inv %*% x))
return(dist)
})
# set cutoff using chi square distribution
threshold <- sqrt(qchisq(p = 0.975, df = ncol(beta.values)))
# find outliers
outliers <-  which(robust_dist >= threshold)
}
}
for( i in 1:dim(bumps)[1])
{
mcd<-robustbase::covMcd(beta.values)
#Get mcd stimate of location
mean_mcd <- mcd$center
# get mcd estimate scatter
cov_mcd <- mcd$cov
# get inverse of scatter
cov_mcd_inv <- solve(cov_mcd)
# compute the robust distance
robust_dist <- apply(beta.values, 1, function(x){
x <- (x - mean_mcd)
dist <- sqrt((t(x)  %*% cov_mcd_inv %*% x))
return(dist)
})
# set cutoff using chi square distribution
threshold <- sqrt(qchisq(p = 0.975, df = ncol(beta.values)))
# find outliers
outliers <-  which(robust_dist >= threshold)
}
outliers
devtools::document()
devtools::build_vignettes()
library(dsBaseClient)
?ds.cor
library(EpiMutations)
devtools::document()
library(EpiMutations)
devtools::document()
grs.diseases[,4]
diseases<-grs.diseases[,4]
set <- minfi::combineArrays(grs.control.panel, diseases,
outType = c("IlluminaHumanMethylation450k",
"IlluminaHumanMethylationEPIC",
"IlluminaHumanMethylation27k"),
verbose = TRUE)
pdata <- Biobase::pData(set)
sample<-colnames(diseases)
#create a variable 0,0,0,0...0,0,1
pdata$samp <- pdata$sampleID == sample
#Create the model matrix
model <- stats::model.matrix(~ samp, pdata)
bumps <- bumphunter::bumphunter(set, model, cutoff = 0.1)$table
bumps$sample <- sample
bumps <- subset(bumps, L >= 5)
i<-1
mcd<-robustbase::covMcd(beta.values)
#Find beta value matrix for each bump
beta.values<-BumpBetaMatrix(bumps[i,],set)
beta.values
mcd<-robustbase::covMcd(beta.values, nsamp = nsamp)
#get mcd stimate of location
mean_mcd <- mcd$center
#get mcd estimate scatter
cov_mcd <- mcd$cov
#get inverse of scatter
cov_mcd_inv <- solve(cov_mcd)
nsamp<-deterministic
nsamp<-"deterministic"
mcd<-robustbase::covMcd(beta.values, nsamp = nsamp)
#get mcd stimate of location
mean_mcd <- mcd$center
#get mcd estimate scatter
cov_mcd <- mcd$cov
#get inverse of scatter
cov_mcd_inv <- solve(cov_mcd)
robust_dist <- apply(beta.values, 1, function(x){
x <- (x - mean_mcd)
dist <- sqrt((t(x)  %*% cov_mcd_inv %*% x))
return(dist)
})
robust_dist
# set cutoff using chi square distribution
threshold <- sqrt(qchisq(p = 0.975, df = ncol(beta.values)))
# find outliers
outliers <-  which(robust_dist >= threshold)
outliers
colnames(outliers)
class(outliers)
names(outliers)
sample
sample %in% names(outliers)
sample
devtools::document()
EpiMutations(diseases)
EpiMutations(diseases, method ="Mahdist.MCD")
diseases<-se.diseases[,4]
EpiMutations(diseases, method ="Mahdist.MCD")
library(dsBaseClient)
?ds.cor
?devtools::build_vignettes()
library(knitr)
devtools::build_vignettes()
devtools::build_vignettes(clean = FALSE)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes(clean = FALSE)
devtools::build_vignettes()
devtools::document()
data(grs.diseases)
diseases<-grs.diseases[,4]
EpiMutations(diseases)
EpiMutations(diseases, method = "mlm")
EpiMutations(diseases, method = "iso.forest")
EpiMutations(diseases, method = "epiMahdist.MCD")
EpiMutations(diseases, method = "Mahdist.MCD")
devtools::document()
data(se.diseases)
save.dir<-"C:/Users/nla94/Desktop/data"
save(se.diseases,filePath(save.dir,se.diseases.rda))
?save(se.diseases,filePath(save.dir,se.diseases.rda))
?save(se.diseases,file = filePath(save.dir,se.diseases.rda))
save(se.diseases,file = filePath(save.dir,se.diseases.rda))
save(se.diseases,file = file.Path(save.dir,se.diseases.rda))
save(se.diseases,file = file.path(save.dir,se.diseases.rda))
save(se.diseases,file = file.path(save.dir,"se.diseases.rda"))
save(se.diseases,file = file.path(save.dir,"grs.diseases.rda"))
save(grs.diseases,file = file.path(save.dir,"se.diseases.rda"))
save(se.diseases,file = file.path(save.dir,"se.diseases.rda"))
save(grs.diseases,file = file.path(save.dir,"grs.diseases.rda"))
save(grs.control.panel,file = file.path(save.dir,"grs.control.panel.rda"))
save(se.control.panel,file = file.path(save.dir,"se.control.panel.rda"))
devtools::document()
devtools::document()
se.diseases
grs.diseases
grs.control.panel
se.control.panel
getwd()
devtools::document()
data("es.diseases")
diseases<-es.diseases[,3]
es.diseases<-se.diseases
data(es.control.panel)
es.control.panel<-se.control.panel
getwd()
save.dir<-"C:/Users/nla94/Documents/GitHub/EpiMutations/data"
save(es.control.panel, file = file.path(save.dir,"es.control.panel"))
save(es.diseases, file = file.path(save.dir,"es.diseases"))
devtools::build_vignettes()
library()
library(BiocStyle)
devtools::install_github("LeireAbarrategui/EpiMutations")
devtools::install_github("LeireAbarrategui/EpiMutations")
devtools::install_github("LeireAbarrategui/EpiMutations")
devtools::install_github("LeireAbarrategui/EpiMutations", dependencies = TRUE)
devtools::document()
devtools::check()
install.packages("LeireAbarrategui/EpiMutations", dependencies = TRUE)
install.packages("LeireAbarrategui/EpiMutations", dependencies = TRUE)
devtools::install_github("LeireAbarrategui/EpiMutations", dependencies = TRUE)
install.packages("LeireAbarrategui/EpiMutations", dependencies = TRUE)
library(installr)
install.Rtools()
devtools::github("LeireAbarrategui/EpiMutations", dependecies =TRUE)
devtools::install_github("LeireAbarrategui/EpiMutations", dependecies =TRUE)
devtools::install_github("LeireAbarrategui/EpiMutations", dependecies =TRUE)
devtools::install_github("LeireAbarrategui/EpiMutations", dependencies =  =TRUE)
devtools::install_github("LeireAbarrategui/EpiMutations", dependencies =  TRUE)
devtools::install_github("LeireAbarrategui/EpiMutations", dependencies =  TRUE)
devtools::document()
load("C:/Users/nla94/Downloads/asthma.rda")
ls
ls()
asthma
class(asthma)
devtools::install_github("isglobal-brge/brgedata", dependencies =  =TRUE)
devtools::install_github("isglobal-brge/brgedata", dependencies =  =TRUE)
devtools::install_github("isglobal-brge/brgedata", dependencies  =TRUE)
devtools::install_github("mnunes/reembolsos")
devtools::install_github("LeireAbarrategui/EpiMutations")
devtools::install_github("LeireAbarrategui/EpiMutations")
devtools::install_github("LeireAbarrategui/EpiMutations")
devtools::install_github("LeireAbarrategui/EpiMutations")
devtools::document()
devtools::build_vignettes()
library(EpiMutations)
grs.diseases[,4]
disease<-grs.diseases[,4]
diseases
disease
dim(grs.diseases)
grs.diseases
grs.diseases[,GSM2562705]
grs.diseases[,"GSM2562705"]
library(EpiMutations)
data(grs.diseases)
grs.diseases[,4]
library(EpiMutations)
?EpiMutations
library(EpiMutations)
EpiMutations
devtools::install_github("C:/Users/nla94/Desktop/Leire/Paquete/EpiMutations")
devtools::install("C:/Users/nla94/Desktop/Leire/Paquete/EpiMutations")
library(EpiMutations)
EpiMutations()
EpiMLM
EpiMLM()
EpiManova()
EpiMANOVA()
EpiMahdist.MCD()
EpiMahdist.MCD()
epiMahdist.MCD()
epiIsolationForest()
BiocManager::install("minfi")
BiocManager::install("a4Base")
BiocManager::install("bumphunter")
BiocManager::install("Biobase")
devtools::install("C:/Users/nla94/Documents/GitHub/EpiMutations")
library(EpiMutations)
EpiMutations()
devtools::install("C:/Users/nla94/Documents/GitHub/EpiMutations", dependencies = FALSE)
library(EpiMutations)
EpiMutations()
?devtools::install
devtools::install("C:/Users/nla94/Documents/GitHub/EpiMutations", dependencies = "Imports")
devtools::install("C:/Users/nla94/Documents/GitHub/EpiMutations", dependencies = "Depends")
devtools::document()
devtools::check()
?devtools::check()
devtools::install("C:/Users/nla94/Documents/GitHub/EpiMutations")
library(EpiMutations)
EpiMutations
library(EpiMutations)
##GenomicRatioSet
data(grs.control.panel)
##ExpressionSet
data(es.control.panel)
#Case samples
##GenomicRatioSet
data(grs.diseases)
##ExpressionSet
data(es.diseases)
grs.control.panel
se.control.panel
es.control.panel
es.diseases
grs.diseases
disease<-es.diseases[,4]
diseases
devtools::build_vignettes()
devtools::document()
